									变量作用域和内存问题
								
		1.数据类型：基本类型和引用类型
			  基本类型：Undefined、Null、Boolean、String、Number
			  
			  
		2.动态属性：
			  JavaScript只能给引用类型动态增加和删除属性，对基本类型即使添加了属性也不生效，且对Undefined和Null执行添加属性动作会报错。
			  在严格模式"use strict"下，对基本类型执行添加属性操作会报错。
			  
			  
	    3.JavaScript对基本类型和引用类型的内存模型与java一致。基本类型放入栈中，引用类型放入堆中。
		
		4.类型检测：对基本类型的检测用typeof，对引用类型的检测用instanceof。
		
		5.执行环境及作用域：
			JavaScript的执行环境可分为全局执行环境和函数执行环境，每种执行环境都对应着自己的作用域链，当访问变量
			的时候，会从当前作用域链开始逐级上层搜索，如果搜索不到则会报错，作用域链只能从下到上，不能逆向。
			
			没有块级作用域。
			
		6.垃圾收集
			JavaScript具有自动垃圾收集机制，执行环境会负责管理代码执行过程中使用的内存。
			
	  